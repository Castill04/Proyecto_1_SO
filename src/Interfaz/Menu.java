package Interfaz;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Clases.Cola;
import Clases.Configuracion;
import Clases.Proceso;
import Clases.SistemaOperativo;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 *
 * @author Ignacio
 */
public class Menu extends javax.swing.JFrame {
    public Configuracion configuracion;
    /**
     * Creates new form Menu
     */
    public Menu() {
        configuracion = new Configuracion("parametros.txt");
        try {
            configuracion.verificarYCrearArchivo();
            int[] parametros = configuracion.leerParametros();
            
            // Los parámetros del archivo:
            // [0] - Duración del ciclo (ms)
            // [1] - Número de procesadores
            // [2] - Número de instrucciones
            // [3] - Tipo de proceso (1=CPU Bound, 0=I/O Bound)
            // [4] - Ciclos para excepción
            // [5] - Ciclos para completar excepción

        } catch (IOException e) {
            e.printStackTrace();
        }
        System.out.println(configuracion);
        initComponents();
    }
    
   private void cargarConfiguracion() {
        try {
            int[] parametros = configuracion.leerParametros();
            txtDuracion.setText(String.valueOf(parametros[0]));
            txtProcesadores.setText(String.valueOf(parametros[1]));
            txtCantInstrucciones.setText(String.valueOf(parametros[2]));
            txtTipoProceso.setText(String.valueOf(parametros[3]));
            txtCiclosExcepcion.setText(String.valueOf(parametros[4]));
            txtCiclosCompletarExcepcion.setText(String.valueOf(parametros[5]));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private boolean configurar() {
        System.out.println(this.configuracion);
        try {
            int duracion = validarNumero(txtDuracion, "Duración del día");
            int procedadores = validarNumeroDeProcesadoresYTipoProceso(txtProcesadores, "Días entre entregas", 2, 3);
            int CantInstrucciones = validarNumero(txtCantInstrucciones, "Productores Placa Base");
            int TipoProceso = validarNumeroDeProcesadoresYTipoProceso(txtTipoProceso, "Productores CPU", 0, 1);
            int CiclosExcepcion = validarNumero(txtCiclosExcepcion, "Productores RAM");
            int CiclosCompletarExcepcion = validarNumero(txtCiclosCompletarExcepcion, "Productores Fuente de Poder");
            System.out.println(configuracion);
            configuracion.guardarParametros(duracion, procedadores, CantInstrucciones, TipoProceso, CiclosExcepcion, CiclosCompletarExcepcion);
            JOptionPane.showMessageDialog(this, "Parámetros guardados correctamente.");
        } catch (NumberFormatException | IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar parámetros: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private int validarNumero(JTextField campo, String nombreCampo) throws NumberFormatException {
        int valor = Integer.parseInt(campo.getText());
        if (valor <= 0) {
            throw new NumberFormatException(nombreCampo + " debe ser un número positivo.");
        }
        return valor;
    }
    
    private int validarNumeroDeProcesadoresYTipoProceso(JTextField campo, String nombreCampo, int min, int max) throws NumberFormatException {
        int valor = Integer.parseInt(campo.getText().trim());

        if (valor < min || valor > max) {
            throw new NumberFormatException(nombreCampo + " debe ser un número entre " + min + " y " + max + ".");
        }

        return valor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConfigurar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtCiclosCompletarExcepcion = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        btnConfigurar1 = new javax.swing.JButton();
        txtDuracion = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtProcesadores = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtCantInstrucciones = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTipoProceso = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtCiclosExcepcion = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();

        btnConfigurar.setText("Actualizar");
        btnConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigurarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Modificar parametros iniciales:");
        jLabel7.setPreferredSize(new java.awt.Dimension(120, 14));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 250, 30));

        txtCiclosCompletarExcepcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCiclosCompletarExcepcionActionPerformed(evt);
            }
        });
        getContentPane().add(txtCiclosCompletarExcepcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 70, -1));

        jLabel21.setText("Ciclos para completar excepción");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 230, -1));

        btnConfigurar1.setText("Actualizar");
        btnConfigurar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigurar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnConfigurar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, -1, -1));

        txtDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracionActionPerformed(evt);
            }
        });
        getContentPane().add(txtDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 70, -1));

        jLabel22.setText("Duracion del ciclo (ms)");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 180, -1));

        txtProcesadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcesadoresActionPerformed(evt);
            }
        });
        getContentPane().add(txtProcesadores, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 70, -1));

        jLabel23.setText("Numero de procesadores");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 180, -1));

        txtCantInstrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantInstruccionesActionPerformed(evt);
            }
        });
        getContentPane().add(txtCantInstrucciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 70, -1));

        jLabel24.setText("Cantidad Instrucciones");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 180, -1));

        txtTipoProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoProcesoActionPerformed(evt);
            }
        });
        getContentPane().add(txtTipoProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 70, -1));

        jLabel25.setText("Tipo de proceso (1=CPU Bound, 0=I/O Bound)");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 230, -1));

        txtCiclosExcepcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCiclosExcepcionActionPerformed(evt);
            }
        });
        getContentPane().add(txtCiclosExcepcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 70, -1));

        jLabel26.setText("Ciclos para excepción");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 230, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCiclosCompletarExcepcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCiclosCompletarExcepcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCiclosCompletarExcepcionActionPerformed

    private void btnConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigurarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConfigurarActionPerformed

    private void btnConfigurar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigurar1ActionPerformed
        // TODO add your handling code here:
        configurar();
    }//GEN-LAST:event_btnConfigurar1ActionPerformed

    private void txtDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracionActionPerformed

    private void txtProcesadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcesadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProcesadoresActionPerformed

    private void txtCantInstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantInstruccionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantInstruccionesActionPerformed

    private void txtTipoProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoProcesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoProcesoActionPerformed

    private void txtCiclosExcepcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCiclosExcepcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCiclosExcepcionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Cola<Proceso> procesosListos = new Cola<>();

                procesosListos.enqueue(new Proceso(1, "P1", 10, true, 0, 0));
                procesosListos.enqueue(new Proceso(2, "P2", 15, false, 3, 2));
                procesosListos.enqueue(new Proceso(3, "P3", 8, true, 0, 0));
                procesosListos.enqueue(new Proceso(4, "P4", 12, false, 4, 3));

                SistemaOperativo so = new SistemaOperativo(2, procesosListos);
                so.iniciar();
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfigurar;
    private javax.swing.JButton btnConfigurar1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtCantInstrucciones;
    private javax.swing.JTextField txtCiclosCompletarExcepcion;
    private javax.swing.JTextField txtCiclosExcepcion;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtProcesadores;
    private javax.swing.JTextField txtTipoProceso;
    // End of variables declaration//GEN-END:variables
}
